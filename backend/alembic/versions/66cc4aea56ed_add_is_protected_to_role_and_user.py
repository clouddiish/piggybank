"""add is_protected to role and user

Revision ID: 66cc4aea56ed
Revises: fd089cba07ff
Create Date: 2025-08-09 13:33:28.748753

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '66cc4aea56ed'
down_revision: Union[str, None] = 'fd089cba07ff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('category_user_id_fkey'), 'category', type_='foreignkey')
    op.drop_constraint(op.f('category_type_id_fkey'), 'category', type_='foreignkey')
    op.create_foreign_key(None, 'category', 'type', ['type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'category', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('goal_user_id_fkey'), 'goal', type_='foreignkey')
    op.drop_constraint(op.f('goal_type_id_fkey'), 'goal', type_='foreignkey')
    op.drop_constraint(op.f('goal_category_id_fkey'), 'goal', type_='foreignkey')
    op.create_foreign_key(None, 'goal', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'goal', 'type', ['type_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'goal', 'category', ['category_id'], ['id'], ondelete='SET NULL')
    op.add_column('role', sa.Column('is_protected', sa.Boolean(), nullable=True))
    op.drop_constraint(op.f('transaction_category_id_fkey'), 'transaction', type_='foreignkey')
    op.drop_constraint(op.f('transaction_user_id_fkey'), 'transaction', type_='foreignkey')
    op.drop_constraint(op.f('transaction_type_id_fkey'), 'transaction', type_='foreignkey')
    op.create_foreign_key(None, 'transaction', 'category', ['category_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'transaction', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'transaction', 'type', ['type_id'], ['id'], ondelete='CASCADE')
    op.add_column('user', sa.Column('is_protected', sa.Boolean(), nullable=True))
    op.drop_constraint(op.f('user_role_id_fkey'), 'user', type_='foreignkey')
    op.create_foreign_key(None, 'user', 'role', ['role_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.create_foreign_key(op.f('user_role_id_fkey'), 'user', 'role', ['role_id'], ['id'])
    op.drop_column('user', 'is_protected')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.drop_constraint(None, 'transaction', type_='foreignkey')
    op.create_foreign_key(op.f('transaction_type_id_fkey'), 'transaction', 'type', ['type_id'], ['id'])
    op.create_foreign_key(op.f('transaction_user_id_fkey'), 'transaction', 'user', ['user_id'], ['id'])
    op.create_foreign_key(op.f('transaction_category_id_fkey'), 'transaction', 'category', ['category_id'], ['id'])
    op.drop_column('role', 'is_protected')
    op.drop_constraint(None, 'goal', type_='foreignkey')
    op.drop_constraint(None, 'goal', type_='foreignkey')
    op.drop_constraint(None, 'goal', type_='foreignkey')
    op.create_foreign_key(op.f('goal_category_id_fkey'), 'goal', 'category', ['category_id'], ['id'])
    op.create_foreign_key(op.f('goal_type_id_fkey'), 'goal', 'type', ['type_id'], ['id'])
    op.create_foreign_key(op.f('goal_user_id_fkey'), 'goal', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.create_foreign_key(op.f('category_type_id_fkey'), 'category', 'type', ['type_id'], ['id'])
    op.create_foreign_key(op.f('category_user_id_fkey'), 'category', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###
